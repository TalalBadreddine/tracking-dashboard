version: '3.8'

services:
  backend:
    build:
      context: ./dashboard
    container_name: spring-backend
    ports:
      - "8080:8080"
    networks:
      - my-network
    depends_on:
      - db
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  frontend:
    build:
      context: ./analytics-dashboard
    container_name: react-frontend
    ports:
      - "3000:80"
    networks:
      - my-network
    depends_on:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - my-network
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dashboard_db
    networks:
      - my-network
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

networks:
  my-network:
    driver: bridge

volumes:
  db-data:
